<?php

/**
* Implements a hook_services_resources().
*/

function cordovanews_services_resources(){
	$api = array(
    'news' => array(
      'operations' => array(
        'retrieve' => array(
          'help' => 'Retrieves news',
          'callback' => '_cordovanews_news_retrieve',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'fn',
              'type' => 'string',
              'description' => 'Function to perform',
              'source' => array('path' => '0'),
              'optional' => TRUE,
              'default' => '0',
            ),
            array(
              'name' => 'nitems',
              'type' => 'int',
              'description' => 'Number of latest items to get',
              'source' => array('param' => 'nitems'),
              'optional' => TRUE,
              'default' => '0',
            ),
            array(
              'name' => 'since',
              'type' => 'int',
              'description' => 'Posts from the last number of days',
              'source' => array('param' => 'since'),
              'optional' => TRUE,
              'default' => '0',
            ),
          ),
        ),
      ),
    ),
  );
  return $api;
}


/**
* Callback function for news retrieve
*/
function _cordovanews_news_retrieve($fn, $nitems, $timestamp) {
  // Check for mad values
  $nitems = intval($nitems);
  $timestamp = intval($timestamp);

  return cordovanews_find_news_items($nitems, $timestamp);
}

/**
* Gets news posts
*/
function cordovanews_find_news_items($nitems, $timestamp) {
  // Compose query
  $query = db_select('node', 'n');
  $query->join('node_revision', 'v', '(n.nid = v.nid) AND (n.vid = v.vid)');
  $query->join('users', 'u', 'n.uid = u.uid');
  $query->join('field_data_body', 'b', '((b.entity_type = \'node\') AND (b.entity_id = n.nid) AND (b.revision_id = n.vid))');
  $query->leftjoin('field_data_field_newsimage', 'i', 'i.entity_id = n.nid');
  $query->leftjoin('file_managed', 'f', 'f.fid = i.field_newsimage_fid');
  $query->fields('v', array('timestamp', 'title'));
  $query->addField('u', 'name', 'author');
  $query->addField('b', 'body_value', 'content');
  $query->addField('n', 'nid', 'nid');
  $query->addField('f', 'filename', 'filename');
  $query->condition('n.type', 'announcement', '=');

  // How many days ago?
  if ($timestamp) {
   $query->condition('v.timestamp', time() - ($timestamp * 60 * 60 * 24), '>');
  }
  $query->orderBy('v.timestamp', 'DESC');
  // Limited by items?
  if ($nitems) {
    $query->range(0, $nitems);
  }
  $items = $query->execute()->fetchAll();
  return $items;
}